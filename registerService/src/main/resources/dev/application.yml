server:
  port: 8902

logging:
  config: classpath:logback.xml
  path: C:/mylogs
spring:
  application:
    name: registerService
  # dataSource
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    #driverClassName: com.mysql.jdbc.Driver
    #url: jdbc:mysql://localhost:3306/gateway?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC
    #username: root
    #password: root
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://192.168.110.28:5432/postgres
    username: postgres
    password: postgres
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  #redis
#  redis:
#      host: localhost
#      port: 6379
#      password:
#      # 连接超时时间（毫秒）
#      timeout: 10000
#      pool:
#        # 连接池中的最大空闲连接
#        max-idle: 8
#        # 连接池中的最小空闲连接
#        min-idle: 10
#        # 连接池最大连接数（使用负值表示没有限制）
#        max-active: 100
#        # 连接池最大阻塞等待时间（使用负值表示没有限制）
#        max-wait: -1
  boot:
    admin:
      url: http://localhost:8905
#指定zipkin服务端的url
  zipkin:
    base-url: http://localhost:8602
#设定样本收集的比率为100%
  sleuth:
    sampler:
      probability: 100



eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8900/eureka/
    registry-fetch-interval-seconds: 5 #eureka client缓存刷新时间
  instance:
    preferIpAddress: true
    appname: registerService
    instance-id: registerService
    lease-expiration-duration-in-seconds: 10 #服务失效心跳时长,10S
    lease-renewal-interval-in-seconds: 5 #服务主动心跳刷新时间，5s

management:
  security:
    enabled: false
  endpoint:
    hystrix:
      stream:
        enabled: true   # 启用hystrix
  endpoints:
    web:
      exposure:
        include: hystrix.stream, *  # 添加hystrix.stream路径

jasypt:
  encryptor:
    password: unisinsight

custom:
    excludePath: /user/checkPassWord,/authority/checkAccessAuth,/user/login,/apply/test/1